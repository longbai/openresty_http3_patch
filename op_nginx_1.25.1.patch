diff -ruNa bundle/headers-more-nginx-module-0.33/src/ngx_http_headers_more_headers_in.c op_ngx_pr/bundle/headers-more-nginx-module-0.33/src/ngx_http_headers_more_headers_in.c
--- bundle/headers-more-nginx-module-0.33/src/ngx_http_headers_more_headers_in.c	2017-11-04 07:05:42.000000000 +0800
+++ op_ngx_pr/bundle/headers-more-nginx-module-0.33/src/ngx_http_headers_more_headers_in.c	2023-07-10 17:02:11.292884512 +0800
@@ -157,11 +157,11 @@
     { ngx_string("Date"), offsetof(ngx_http_headers_in_t, date),
                  ngx_http_set_builtin_header },
 #endif
-
+#if 0
     { ngx_string("Cookie"),
                  offsetof(ngx_http_headers_in_t, cookies),
                  ngx_http_set_builtin_multi_header },
-
+#endif
     { ngx_null_string, 0, ngx_http_set_header }
 };
 
diff -ruNa bundle/ngx_lua-0.10.21/src/ngx_http_lua_headers_in.c op_ngx_pr/bundle/ngx_lua-0.10.21/src/ngx_http_lua_headers_in.c
--- bundle/ngx_lua-0.10.21/src/ngx_http_lua_headers_in.c	2022-03-02 14:54:22.000000000 +0800
+++ op_ngx_pr/bundle/ngx_lua-0.10.21/src/ngx_http_lua_headers_in.c	2023-07-06 23:21:22.943541019 +0800
@@ -151,11 +151,11 @@
     { ngx_string("Date"), offsetof(ngx_http_headers_in_t, date),
                  ngx_http_set_builtin_header },
 #endif
-
+#if 0
     { ngx_string("Cookie"),
                  offsetof(ngx_http_headers_in_t, cookies),
                  ngx_http_set_builtin_multi_header },
-
+#endif
     { ngx_null_string, 0, ngx_http_set_header }
 };
 
diff -ruNa bundle/redis-nginx-module-0.3.9/ngx_http_redis_module.c op_ngx_pr/bundle/redis-nginx-module-0.3.9/ngx_http_redis_module.c
--- bundle/redis-nginx-module-0.3.9/ngx_http_redis_module.c	2022-05-16 14:44:46.000000000 +0800
+++ op_ngx_pr/bundle/redis-nginx-module-0.3.9/ngx_http_redis_module.c	2023-07-06 23:22:58.072857939 +0800
@@ -615,7 +615,7 @@
             ngx_str_set(&h->value, "gzip");
             h->lowcase_key = (u_char*) "content-encoding";
 #if (NGX_HTTP_GZIP)
-            u->headers_in.content_encoding = h;
+            // u->headers_in.content_encoding = h;
 #endif
         }
 
diff -ruNa bundle/srcache-nginx-module-0.32/src/ngx_http_srcache_util.c op_ngx_pr/bundle/srcache-nginx-module-0.32/src/ngx_http_srcache_util.c
--- bundle/srcache-nginx-module-0.32/src/ngx_http_srcache_util.c	2020-01-23 07:15:15.000000000 +0800
+++ op_ngx_pr/bundle/srcache-nginx-module-0.32/src/ngx_http_srcache_util.c	2023-07-06 22:53:43.088562881 +0800
@@ -546,28 +546,27 @@
 ngx_http_srcache_response_no_cache(ngx_http_request_t *r,
     ngx_http_srcache_loc_conf_t *conf, ngx_http_srcache_ctx_t *ctx)
 {
-    ngx_table_elt_t   **ccp;
+    ngx_table_elt_t   *cc;
     ngx_table_elt_t    *h;
-    ngx_uint_t          i;
     u_char             *p, *last;
     ngx_int_t           n;
     time_t              expires;
 
     dd("checking response cache control settings");
 
-    ccp = r->headers_out.cache_control.elts;
+    cc = r->headers_out.cache_control;
 
-    if (ccp == NULL) {
+    if (cc == NULL) {
         goto check_expires;
     }
 
-    for (i = 0; i < r->headers_out.cache_control.nelts; i++) {
-        if (!ccp[i]->hash) {
+    for (cc = cc->next; cc; cc = cc->next) {
+        if (!cc->hash) {
             continue;
         }
 
-        p = ccp[i]->value.data;
-        last = p + ccp[i]->value.len;
+        p = cc->value.data;
+        last = p + cc->value.len;
 
         if (!conf->store_private
             && ngx_strlcasestrn(p, last, (u_char *) "private", 7 - 1) != NULL)
